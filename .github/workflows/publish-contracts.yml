name: Release Contracts

on:
  release:
    types: [published]

jobs:
  release-contracts:
    name: Release Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive --ignore-optional
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Compile contracts
        run: yarn run compile

      - name: Deploy local 1
        run: yarn run deploy:local:1

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_WRITE_PAT }}

      - name: Push docker image to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:evm1-${{ github.ref_name }}
          push: true

      - name: Remove data
        run: rm -r data/

      - name: Deploy local 2
        run: yarn run deploy:local:2

      - name: Push docker image to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:evm2-${{ github.ref_name }}
          push: true

      - name: Remove data
        run: rm -r data/

      - name: Generate types
        run: yarn run generate-types

      - name: Build packages
        run: yarn run build

      - name: Publish to npm registry
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}

      #in case of failure
      - name: Rollback on failure
        if: failure()
        uses: author/action-rollback@5bf3d25b05c5192123e0bfc077d4986420c0beec
        with:
          id: ${{ steps.create_release.outputs.id }}
          tag: ${{ github.ref_name }}
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
